[General]
network = ${industry4_tcpip, industry4}

output-vector-file = ${resultdir}/${inifile}/${inifile}-${runnumber}.vec
output-scalar-file = ${resultdir}/${inifile}/${inifile}-${runnumber}.sca

debug-on-errors = false

repeat = 15
seed-set = ${repetition}

# Configure como true para exibir os ips da gui
**.displayAddresses = false

################################### Factory #######################################
# Configura o intervalo de tempo entre a produção de cada produto
**.factory.intervalTime = 5s 

# O produto criado dinamicamente é do tipo
**.factory.nodeType = "openflow.nodes.RFIDTagNode"


################################### RFID PARAMNS ##################################
**.phyRFID.carrierFrequency = 900MHz
**.phyRFID.phyOpMode = "g"
**.phyRFID.bitrate = 54Mbps #80kbps
**.phyRFID.maxDistance = 10m

**.channelControl.carrierFrequency = 900MHz

################################### SENSORS #######################################
**.RFID*.numTcpApps = 1
**.RFID*.tcpApp[*].typename = "SensorApp"
**.RFID*.tcpApp[*].localAddress = ""
**.RFID*.tcpApp[*].dataTransferMode = "object"
**.RFID*.tcpApp[*].localPort = -1
**.RFID*.tcpApp[*].connectAddress = "server"
**.RFID*.tcpApp[*].connectPort = 1000
**.RFID*.tcpApp[*].thinkTime = 0s
**.RFID*.tcpApp[*].idleInterval = 3s


**.txQueueLimit = 50000

################################### CLIENT #######################################
## Camada de aplicação
**.client.numTcpApps = 1
**.client.tcpApp[*].typename = "ClientApp"
**.client.tcpApp[*].localAddress = ""
**.client.tcpApp[*].dataTransferMode = "object"
**.client.tcpApp[*].localPort = -1
**.client.tcpApp[*].connectAddress = "server"
**.client.tcpApp[*].connectPort = 1000
**.client.tcpApp[*].thinkTime = 0s
**.client.tcpApp[*].idleInterval = 3s


################################### SUPPLIER #######################################

**.supplier.numTcpApps = 1
**.supplier.tcpApp[*].typename = "SupplierApp"
**.supplier.tcpApp[*].localAddress = ""
**.supplier.tcpApp[*].dataTransferMode = "object"
**.supplier.tcpApp[*].localPort = -1
**.supplier.tcpApp[*].connectAddress = "server"
**.supplier.tcpApp[*].connectPort = 1000
**.supplier.tcpApp[*].thinkTime = 0s
**.supplier.tcpApp[*].idleInterval = 3s


################################### SERVER #######################################
## Camada de aplicação
**.server.numTcpApps = 1
**.server.tcpApp[*].typename = "ServerApp"
**.server.tcpApp[*].localAddress = "server"
**.server.tcpApp[*].localPort = 1000

################################### PRODUCTS #######################################
## Should be allocated dynamically

*.product*.appRFID.isTag = true

## Mobilidade 
###*.product*.mobilityType = "RectangleMobility"
*.productP1*.mobility.constraintAreaMinX = 500m
*.productP1*.mobility.constraintAreaMinY = 240m
*.productP1*.mobility.constraintAreaMaxX = 800m
*.productP1*.mobility.constraintAreaMaxY = 330m


*.productP0*.mobility.constraintAreaMinX = 50m
*.productP0*.mobility.constraintAreaMinY = 240m
*.productP0*.mobility.constraintAreaMaxX = 300m
*.productP0*.mobility.constraintAreaMaxY = 330m

# Posição inicial do produto com relação aos valores configurados acima
*.product*.mobility.startPos = 0

# Velocidade que o produto irá passar pela esteira
*.product*.mobility.speed = 5mps

*.updateInterval = 0.1s # test with 0s too, and let getCurrentPosition update the display string from a test module

################################### OPEN FLOW DEVICES (CONTROLERS, SENSORS, SWITCH) #######################################

# GERAL
**.buffer.capacity = 10

**.ofa_switch.flow_timeout = 5s
**.ofa_switch.connectPort = 6633
**.ofa_switch.connectAddress = "controller"

**.wlanRFID.bitrate = 1Mbps
**.wlanRFID.radio.maxDistance = 12m


# CONTROLER
**.controller.ofa_controller.port = 6633
**.controller.behavior = "Forwarding"
**.controller.tcp.mss = 800
#**.controller.ofa_controller.address =


# SWITCH
**.switch*.tcp.mss = 800
**.switch*.sendCompletePacket = false
**.switch*.etherMAC[*].promiscuous = true
#**.switch2.tcp.nagleEnabled = false

**.gateway.tcp.mss = 800
**.gateway.sendCompletePacket = false
**.gateway.etherMAC[*].promiscuous = true



# NIC configuration
**.ppp[*].queueType = "DropTailQueue" # in routers
**.ppp[*].queue.frameCapacity = 10  # in routers

*.configurator.networkAddress = "192.168.1.0"

**.networkLayer.configurator.networkConfiguratorModule = ""
